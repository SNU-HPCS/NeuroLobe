const0 = set_register(immediate = imm0)
tid = loop_unit(unit_name = partial_template)

    P1 = memory(access_type = 'read', mem_type = hist_mem['P1', tid])
    memory(access_type = 'write', mem_type = hist_mem['P1', tid], reg_data = const0)
    P2 = memory(access_type = 'read', mem_type = state_mem['template_psums_P2', tid])
    memory(access_type = 'write', mem_type = state_mem['template_psums_P2', tid], reg_data = const0)
    P3 = memory(access_type = 'read', mem_type = state_mem['template_psums_P3', tid])
    memory(access_type = 'write', mem_type = state_mem['template_psums_P3', tid], reg_data = const0)

    #p1 = rmw_op(func_type = 'pop', access_type = 'htoh', local_mem = hist_mem['P1', tid])
    #p2 = rmw_op(func_type = 'pop', access_type = 'stos', local_mem = state_mem['template_psums_P2', tid])
    #p3 = rmw_op(func_type = 'pop', access_type = 'stos', local_mem = state_mem['template_psums_P3', tid])

    event_trigger(packet_type = 'tm_psum_P1', reg_addr0 = tid, reg_addr1 = P1, condition = 'P1 > imm0')
    event_trigger(packet_type = 'tm_psum_P2', reg_addr0 = tid, reg_addr1 = P2, condition = 'P2 > imm0')
    event_trigger(packet_type = 'tm_psum_P3', reg_addr0 = tid, reg_addr1 = P3, condition = 'P3 > imm0')
unit_end()
